{{- range .Values.controllers }}
---
apiVersion: apps/v1
kind: {{ .kind | default "Deployment" }}
metadata:
  name: {{ .title }}-{{ eq (.kind | default "Deployment") "Deployment" | ternary "d" (eq .kind "ReplicationController" | ternary "rc" (eq .kind "ReplicaSet" | ternary "rs" (eq .kind "DaemonSet" | ternary "ds" (eq .kind "StatefulSet" | ternary "ss" (eq .kind "Job" | ternary "j" (eq .kind "CronJob" | ternary "cj" "other")))))) }}
  labels:
    app: {{ .title }}
spec:
  replicas: {{ .replicaCount | default $.Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .title }}
  template:
    metadata:
      labels:
        app: {{ .title }}
    spec:
      containers:
      - name: {{ .title }}
        image: "{{ $.Values.image.acr }}/cloudpillar{{ .title }}service:{{ $.Values.image.tag }}"
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - all
        imagePullPolicy: IfNotPresent
        {{- if .port }}
        ports:
        - containerPort: {{ .port }}
        {{- end }}
        env:
        {{- if $.Values.env }}
        {{- toYaml $.Values.env | nindent 8 }}
        {{- end }}
        {{- if .env }}
        {{- toYaml .env | nindent 8 }}
        {{- end }}
        resources:
          requests:
            memory: "256Mi"
            cpu: "0.5"
          limits:
            memory: "512Mi"
            cpu: "1"
        {{ if .volumeMounts }}
        volumeMounts:
        {{- toYaml .volumeMounts | nindent 8 }}
        {{- end }}
      {{ if .volumeMounts }}
      volumes:
      {{- range .volumeMounts }}
      - name: {{ .name }}
        secret:
          secretName: {{ .name }}
          defaultMode: 420
      {{- end }}
      {{- end }}
      imagePullSecrets:
      - name: acr-secret
{{- if .port }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .title }}-service
spec:
  type: ClusterIP
  selector:
    app: {{ .title }}
  ports:
  - protocol: TCP
    port: {{ .port }}
    targetPort: {{ .port }}
{{- end }}
{{- end }}
