variables:
- name: timelabel
  value: $[format('{0:yyyyMMddHHmmss}', pipeline.startTime)]
- name: imagetag
  value: 1.0.$(Build.BuildNumber).$(timelabel)
parameters:
- name: env
  displayName: Select Environment to deploy
  type: string
  default: dev
  values:
  - tst
  - dev
  - stg
  - prd   
- name: services
  displayName: Select services to deploy
  type: object
  default:
  - BlobStreamer
  - Iotlistener
  - Keyholder  
trigger:
  batch: true
  branches:
    include:
    - main
    - $(Build.SourceBranchName)
    exclude:
    - '*'
stages:
  
- stage: CI_Stage
  
  jobs:
  - job: CD_Job
    pool:
      name: CloudPillar-Pool
      demands:
      - agent.name -equals cpaks-${{ parameters.env }}-vm-agent
    steps:
    - task: HelmDeploy@0
      inputs:
        azureSubscription: CloudPillar Dev
        azureResourceGroup: 'cp-ms-${{ parameters.env }}-rg'
        kubernetesCluster: 'cp-${{ parameters.env }}-aks'
        command: 'ls'
        arguments: --all
    - script: |
        helm list --all
    - script: |
        helm list --all
        helm delete cloudpillarback
        helm list --all
    - task: HelmDeploy@0
      inputs:
        connectionType: 'Azure Resource Manager'
        azureSubscription: CloudPillar Dev
        azureResourceGroup: 'cp-ms-${{ parameters.env }}-rg'
        kubernetesCluster: 'cp-${{ parameters.env }}-aks'
        command: 'uninstall'
        chartType: 'FilePath'
        chartPath: 'deploy/backend/'
        releaseName: 'cloudpillarback'
        valueFile: 'deploy/backend/environments/values-${{ parameters.env }}.yaml'
        namespace: default
    - task: HelmDeploy@0
      inputs:
        azureSubscription: CloudPillar Dev
        azureResourceGroup: 'cp-ms-${{ parameters.env }}-rg'
        kubernetesCluster: 'cp-${{ parameters.env }}-aks'
        command: 'ls'
        arguments: --all