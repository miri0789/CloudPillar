name: selective_ci_$(Rev:.r)
# name: selective_ci


# 1. The branch trigger should be chnages in the current branch
trigger:
  batch: true
  branches:
    include:
    - main
    - test-selective-build
    - TestBranch
    - "*"
    # - $(Build.SourceBranchName)
    # - main
    # - *
  # paths:
  #   include:
  #   - src/backend/*
# 2. The pipeline should be triggered on every change in the repository
# pr: none


parameters:
  - name: env
    displayName: Select Environment to deploy
    type: string
    default: dev
    values:
    - tst
    - dev
    - stg
    - prd
  - name: image

    displayName: Select Image to Build and Scan
    type: string
    default: iotlistener
    values:
    # - all
    - analyzer
    - beapi
    - blobstreamer
    - iotlistener
    - keyholder
    - mongowriter
    - twinlistener
  - name: versionString
    displayName: Select Major & Minor Verson
    type: string
    default: latest # 1.0
    values:
    - latest # 1.0
    - nextminor # 1.1
    - nextmajor #2.0

# * Variables
variables:
#* Variable Groups
- group: arm-vg
- group: iac-backend-vg
- group: aks-backend-vg
- group: backend-secrets-vg

#* Dynamic Variables
- name: TIMESTAMP
  value: $(date +%Y%m%d%H%M%S)
- name: BuildNumber
  value: $(git rev-list --count HEAD)
- name: RepoName
  value: $(Build.Repository.Name)
- name: RepoName2
  value: $(git config --get remote.origin.url | sed 's/.*\///')
- name: SourceBranchName
  value: $(Build.SourceBranchName)
- name: Files
  value: $(git diff --name-only test-selective-build~1..test-selective-build)
  # value: $(git diff --name-only $SourceBranchName)~1..$SourceBranchName))
  # value: $(git diff --name-only HEAD~1..$(Build.SourceBranchName))
  # git diff-tree --no-commit-id --name-only -r HEAD



stages:
- stage: Test2
  displayName: Test2_Stage
  jobs:
  - job: Local_Repo
    displayName: 'Print Local Repo'
    pool:
      name: $(AGENT_POOL)
      agent.name: aks-${{parameters.env}}-agent
    steps:
    - checkout: self
      persistCredentials: true
      clean: true
    # This Step will print the Repo Name, Source Branch Name (from ADO), Current Branch Name (Locally), changed files names and path to the console
    - bash: |
        pwd
        echo "Local"
        git diff-tree --no-commit-id --name-only -r HEAD
        REPO=$(RepoName)
        BRANCH=$(SourceBranchName)

        echo "Repo Name: $REPO"
        echo "Source Branch Name: $BRANCH"

        git fetch --all
        git checkout $BRANCH
        git pull
        
        # FILES=$(git diff --name-only HEAD~1..$(SourceBranchName))
        FILES1=$(git diff --name-only test-selective-build~1..test-selective-build)
        FILES2=$(git diff --name-only $(SourceBranchName)~1..$(SourceBranchName))

        echo "Changed Files Names and Path: ${FILES1[@]}"
        echo "Changed Files Names and Path: ${FILES2[@]}"
        echo "Changed Files Names and Path2: $(Files)"
        #! BRANCH=$(git rev-parse --abbrev-ref HEAD) # Current Branch Name
        

        #! Error fatal: ambiguous argument 'master': unknown revision or path not in the working tree.
        #! Use '--' to separate paths from revisions, like this:
        #!'git <command> [<revision>...] -- [<file>...]'
        #! Files=$(git diff HEAD HEAD~ --name-only) # Changed Files Names and Path
        echo "Local"
        for file in "${Files[@]}"
        do
          echo $file
        done             
      name: print_local_repo
