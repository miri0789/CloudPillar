name: selective_ci_$(Rev:.r)
# name: selective_ci


# 1. The branch trigger should be chnages in the current branch
trigger:
  batch: true
  branches:
    include:
    - main
    - test-selective-build
    - TestBranch
    - "*"
    # - $(Build.SourceBranchName)
    # - main
    # - *
  # paths:
  #   include:
  #   - src/backend/**/*.csproj
# 2. The pipeline should be triggered on every change in the repository
# pr: none


parameters:
  - name: env
    displayName: Select Environment to deploy
    type: string
    default: dev
    values:
    - tst
    - dev
    - stg
    - prd
  - name: image

    displayName: Select Image to Build and Scan
    type: string
    default: iotlistener
    values:
    # - all
    - analyzer
    - beapi
    - blobstreamer
    - iotlistener
    - keyholder
    - mongowriter
    - twinlistener
  - name: versionString
    displayName: Select Major & Minor Verson
    type: string
    default: latest # 1.0
    values:
    - latest # 1.0
    - nextminor # 1.1
    - nextmajor #2.0

# * Variables
variables:
#* Variable Groups
- group: arm-vg
- group: iac-backend-vg
- group: aks-backend-vg
- group: backend-secrets-vg

#* Dynamic Variables
- name: TIMESTAMP
  value: $(date +%Y%m%d%H%M%S)
- name: BuildNumber
  value: $(git rev-list --count HEAD)
- name: RepoName
  value: $(Build.Repository.Name)
- name: SourceBranchName
  value: $(Build.SourceBranchName)
- name: Files
  value: $(git diff --name-only HEAD~1..HEAD)



stages:
- stage: Test
  displayName: Test_Stage
  jobs:
  - job: ADO_Repo
    displayName: Print ADO Repo
    pool:
      name: $(AGENT_POOL)
      agent.name: aks-${{parameters.env}}-agent
    steps:
    - checkout: self
      persistCredentials: true
      # This Step will print the Repo Name, Source Branch Name (from ADO), Current Branch Name (Locally), changed files names and path to the console
    - bash: |
        echo "ADO"
        FILES=$(git diff --name-only HEAD~1..HEAD)

        #! Error fatal: ambiguous argument 'master': unknown revision or path not in the working tree.
        #! Use '--' to separate paths from revisions, like this:
        #!'git <command> [<revision>...] -- [<file>...]'

        #! git diff --name-only HEAD master

        echo "ADO"
        echo "Repo Name: $(Build.Repository.Name)          $(RepoName))"
        echo "Source Branch Name: $(Build.SourceBranchName)              $(SourceBranchName)"
        echo "Changed Files Names and Path: ${FILES[@]}"
        echo "Changed Files Names and Path2: $(Files)"


        for file in "${Files[@]}"
        do
          echo $file
        done     

      name: print_ado_repo
          
- stage: Test2
  displayName: Test2_Stage
  jobs:
  - job: Local_Repo
    displayName: 'Print Local Repo'
    pool:
      name: $(AGENT_POOL)
      agent.name: aks-${{parameters.env}}-agent
    steps:
    - checkout: self
      persistCredentials: true
    # This Step will print the Repo Name, Source Branch Name (from ADO), Current Branch Name (Locally), changed files names and path to the console
    - bash: |
        echo "Local"
        REPO1=$(basename `git rev-parse --show-toplevel`) # Repo Name
        REPO2=$(basename "$(git rev-parse --show-toplevel)") # Repo Name
        REPO3=$(git rev-parse --show-toplevel | awk -F/ '{print $NF}')
        #! BRANCH=$(git rev-parse --abbrev-ref HEAD) # Current Branch Name
        #! Error fatal: ambiguous argument 'master': unknown revision or path not in the working tree.
        #! Use '--' to separate paths from revisions, like this:
        #!'git <command> [<revision>...] -- [<file>...]'
        #! Files=$(git diff HEAD HEAD~ --name-only) # Changed Files Names and Path

        tree -L 2
        
        echo "Repo Name: $REPO"
        echo "Repo2 Name: $REPO2"
        echo "Repo3 Name: $REPO3"
        echo "Current Branch Name: $BRANCH"
        echo "Changed Files Names and Path: $Files"
      name: print_local_repo

# git diff --name-only HEAD~1..HEAD




# - stage: Test3
#   displayName: Test3_Stage
#   jobs:
#   - job:
#     displayName:
#     pool:
#       name: $(AGENT_POOL)
#       agent.name: aks-${{parameters.env}}-agent
#       steps:
#       - checkout: self
#         persistCredentials: true













# +N Condition for pipelines trigger type PR

# condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))



# +N Skipping Pipelines (Include in Commit)
# [skip ci] or [ci skip]
# skip-checks: true or skip-checks:true
# [skip azurepipelines] or [azurepipelines skip]
# [skip azpipelines] or [azpipelines skip]
# [skip azp] or [azp skip]
# ***NO_CI***

# +N Wildcards
# When specifying a branch, tag, or path, you may use an exact name or a wildcard. Wildcards patterns allow * to match zero or more characters and ? to match a single character.
# "*" - matches everything (zero or more characters)
# "?" - matches any single character
# If you start your pattern with * in a YAML pipeline, you must wrap the pattern in quotes, like "*-releases".
# For branches and tags:
# A wildcard may appear anywhere in the pattern.
# For paths:
# In Azure DevOps Server 2022 and higher, including Azure DevOps Services, a wildcard may appear anywhere within a path pattern and you may use * or ?.
# In Azure DevOps Server 2020 and lower, you may include * as the final character, but it doesn't do anything differently from specifying the directory name by itself. You may not include * in the middle of a path filter, and you may not use ?.