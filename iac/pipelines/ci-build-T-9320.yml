name: ci_build_t_9320_2
trigger:
- $(Build.SourceBranchName)

# * Parameters
parameters:
  - name: env
    displayName: Select Environment to deploy
    type: string
    default: dev
    values:
    - tst
    - dev
    - stg
    - prd
  - name: image
    displayName: Select Image to Build and Scan
    type: string
    default: iotlistener
    values:
    # - all
    - analyzer
    - beapi
    - blobstreamer
    - iotlistener
    - keyholder
    - mongowriter
    - twinlistener  
  - name: versionString
    displayName: Select Major & Minor Verson
    type: string
    default: current # 1.0
    values:
    - current # 1.0
    - nextminor # 1.1
    - nextmajor #2.0


variables:
# * Variables Groups
- group: arm-vg
- group: iac-backend-vg
- group: aks-backend-vg
- group: backend-secrets-vg

# * Variables

# * Dynamic Variables
- name: TIMESTAMP
  value: $(date +%Y%m%d%H%M%S)
- name: BuildNumber
  value: $(git rev-list --count HEAD)

# * Clean Variables



stages:
- stage: CI_Build
  displayName: CI Build Process

  jobs:
  - job: Update_Version
    displayName: Update Version ID
    steps:
    - checkout: self
      persistCredentials: true
      clean: true
    - bash: |
        echo "##[section]Update Version Section"
        echo "##[group]Get Current Version Group"
        
        # Major=$(grep -oP '^major=\K\d+' src/backend/version.txt) && Minor=$(grep -oP '^minor=\K\d+' src/backend/version.txt) && version=$Major.$Minor && buildNumber=$(BuildNumber) && timestamp=$(TIMESTAMP) && fullVersion=$version.$buildnumber.$timestamp
        Major=1 && Minor=0 && version=$Major.$Minor && buildNumber=$(BuildNumber) && timestamp=$(TIMESTAMP) && fullVersion=$version.$buildNumber.$timestamp
        
        echo "##vso[task.setvariable variable=Major;isoutput=true]$Major"
        echo "##vso[task.setvariable variable=Minor;isoutput=true]$Minor"
        echo "##vso[task.setvariable variable=version;isoutput=true]$version"
        echo "##vso[task.setvariable variable=fullVersion;isoutput=true]$fullVersion"
        
        echo "fullVersion: $fullVersion"
        echo "##[endgroup]Get Current Version Finished"
      name: SetCurrentVersion
    - bash: |
        echo "##[warning]Print Current Version"
        echo "##[command]$(SetCurrentVersion.fullVersion)"
      name: printCurrentVersion
        
