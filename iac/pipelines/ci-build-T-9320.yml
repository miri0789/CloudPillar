name: ci_build_t_9320_2
trigger:
- $(Build.SourceBranchName)


parameters:
  - name: env
    displayName: Select Environment to deploy
    type: string
    default: dev
    values:
    - tst
    - dev
    - stg
    - prd
  - name: image
    displayName: Select Image to Build and Scan
    type: string
    default: iotlistener
    values:
    # - all
    - analyzer
    - beapi
    - blobstreamer
    - iotlistener
    - keyholder
    - mongowriter
    - twinlistener  
  - name: chosenVersionString
    displayName: Select Major & Minor Verson
    type: string
    default: current # 1.0
    values:
    - current # 1.0
    - nextminor # 1.1
    - nextmajor #2.0
  - name: chosenVersionInt
    displayName: Select Major & Minor Verson
    type: string
    default: 8.3
    values:
    - 8.3
    - 8.4
    - 9.0


variables:
- group: arm-vg
- group: iac-backend-vg
- group: aks-backend-vg
- group: backend-secrets-vg

- name: TIMESTAMP
  value: $(date +%Y%m%d%H%M%S)
- name: BuildNumber
  value: $(git rev-list --count HEAD)

- name: chosenMajor # Major (Based on User Selection)
  value: ${{ coalesce(split(parameters.chosenVersionInt, '.')[0], '1') }}
- name: chosenMinor # Minor (Based on User Selection)
  value: ${{ coalesce(split(parameters.chosenVersionInt, '.')[1], '0') }}
- name: chosenVersionInt # Version (Based on User Selection)
  value: ${{ parameters.chosenVersionInt }}
- name: chosenVersionString # Version String (Based on User Selection)
  value: ${{ parameters.chosenVersionString }}

- name: currentMajor # Major (Based on User Selection)
  value: 1
  # +TODO 1. Uncomment below
  # value: $(grep -oP '^major=\K\d+' src/backend/version.txt)
- name: currentMinor # Minor (Based on User Selection)
  value: 0
- name: currentVersion # Version (Based on User Selection)
  value: 1.0
  # +TODO 2. Uncomment below
  # value: $(grep -oP '^major=\K\d+' src/backend/version.txt).$(grep -oP '^minor=\K\d+' src/backend/version.txt)

# - name: versionEqual # Current vs Chosen Version (Based on User Selection) (IFF Condition)
  # value: 1.0



stages:
- stage: CI_Build
  displayName: CI Build Process

  jobs:
  - job: Update_Version
    displayName: Update Latest Version ID
    pool:
      name: $(AGENT_POOL)
      agent.name: aks-${{parameters.env}}-agent 
    steps:
    - ${{ if eq(parameters.chosenVersionString, 'current') }}:
      - checkout: self
        persistCredentials: true
        clean: true
      - bash: |
          echo "##[section]Current Group"
          echo "##[group]Current Group"
          currentMajor=$(currentMajor) && currentMinor=$(currentMinor) && currentVersion=$(currentVersion) && buildNumber=$(BuildNumber) && timestamp=$(TIMESTAMP)
          echo "currentMajor: $currentMajor" && echo "" && echo "currentMinor: $currentMinor" && echo "" && echo "currentVersion: $currentVersion"

          newVersion=$currentMajor.$currentMinor.$buildnumber.$timestamp
          # +TODO Set As Var
          echo "newVersion: $newVersion"
          
          echo "##[endgroup]Current Group Finished"
        name: SetVarsCurrent

    - ${{ if eq(parameters.chosenVersionString, 'nextminor') }}:
      - checkout: self
        persistCredentials: true
        clean: true
      - bash: |
          # +TODO 4. newChosenVersion Var and Update Major Minor Vars Number
          echo "##[section]Next Minor Group"
          echo "##[group]Current Group"
          currentMajor=$(currentMajor) && buildNumber=$(BuildNumber) && timestamp=$(TIMESTAMP)
          currentMinor=$(currentMinor) + 1 
          echo "currentMajor: $currentMajor" && echo "" && echo "currentMinor: $currentMinor"
          # && currentMinor=$(currentMinor) + 1 && currentVersion=$(currentVersion)
          # echo "currentMajor: $currentMajor" && echo "" && echo "currentMinor: $currentMinor" && echo "" && echo "currentVersion: $currentVersion"          
          
          # newVersion=$currentMajor.$currentMinor.$BuildNumber.$TIMESTAMP          
          # echo "newVersion: $newVersion"

          echo "##[endgroup]Current Group Finished"
        name: SetVarsNextMinor