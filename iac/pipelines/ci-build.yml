
name: ci_clean_$(Rev:r)

trigger:
  batch: true
  branches:
    include:
    - "*"

# variables:
# - name: basePath
#   value: src/backend/
# - name: dockerFile
#   value: infra/build/Dockerfile
# - name: major
#   value: $(grep -oP '^major=\K\d+' src/backend/version.txt)
# - name: minor
#   value: $(grep -oP '^minor=\K\d+' src/backend/version.txt)
# - name: TIME
#   value: $(date +%Y%m%d%H%M%S)
# - name: GitBuildNumber
#   value: $(git rev-list --count HEAD)
# - name: registryName
#   value: 'iotimageacr'
# - name: dockerfilePath
#   value: './src/edge/conquest/Dockerfile'
# - name: pipelineAcrConnection
#   value: 'iotacr'


parameters:
  - name: env
    displayName: Select Environment to deploy
    type: string
    default: dev
    values:
    - tst
    - dev
    - stg
    - prd    
  - name: image
    displayName: Select Image to Build and Scan
    type: string
    default: all
    values:
    - all
    - analyzer
    - beapi
    - blobstreamer
    - iotlistener
    - keyholder
    - mongowriter
    - twinlistener    
    # - edge_conquest

resources:
- repo: self

stages:
- stage: BuildSpecificImage
  displayName: Build Specific Image
  condition: ne('${{ parameters.image }}', 'all')
  jobs:
  - job: RetrieveImageInfo
    pool:
      name: $(AGENT_POOL)
      agent.name: aks-${{parameters.env}}-agent    
    displayName: Retrieve Image Information
    steps:
    - template: 'templates/images-templates.yml'
      parameters:
        selectedImage: ${{ parameters.image }} # Pass the selected image as a parameter
    - ${{ each img in template('templates/images-templates.yml').parameters.images }}:
      - ${{ if eq(parameters.image, img.name) }}:
        - script: |
            echo "##vso[task.setvariable variable=imageName;]${{ img.imageName }}"
            echo "##vso[task.setvariable variable=imageVersion;]${{ img.imageVersion }}"
            echo "##vso[task.setvariable variable=imagePath;]${{ img.imagePath }}"
            echo "##vso[task.setvariable variable=dockerFilePath;]${{ img.dockerFilePath }}"
          displayName: 'Set Image Information Variables for ${{ img.name }}'        

  - job: PrintImageInfo
    dependsOn: RetrieveImageInfo
    pool:
      name: $(AGENT_POOL)
      agent.name: aks-${{parameters.env}}-agent
    displayName: Print Image Information
    steps:
    - script: |
        echo "Image Name: $(imageName)"
        echo "Image Version: $(imageVersion)"
        echo "Image Path: $(imagePath)"
        echo "Docker File Path: $(dockerFilePath)"
      displayName: 'Print Image Information Variables'