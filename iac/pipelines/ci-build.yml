
name: ci_build_pipeline
trigger:
  - main

variables:
- name: build-versions-vg
# - group: arm-vg
# - group: iac-backend-vg
# - group: backend-secrets-vg


stages:
- stage: Test
  displayName: Test
  jobs:

  - job: Testing_Variables
    displayName: Testing Variables
    pool:
      vmImage: 'ubuntu-20.04'
      steps:
    - checkout: self
      persistCredentials: true
      clean: true

    - task: Bash@3
      displayName: 'Tests'
      inputs:
        targetType: inline
        script: |
          echo "Build.BuildId - $(Build.BuildId)"
          echo "Build.BuildNumber(Time) - $(Build.BuildNumber)"
          echo "SYSTEM_ACCESSTOKEN - $(System.AccessToken)"
          echo "Execution ID: $(System.JobId)"
          echo "Version: $(versionLabel)-$(System.JobId)"
          echo "Build.ContainerId	- $(Build.ContainerId)"
          echo "Build.DefinitionName	- $(Build.DefinitionName)"
          echo "Build.DefinitionId	- $(Build.DefinitionId)"
          echo "Build.DefinitionVersion	- $(Build.DefinitionVersion)"
          echo "Build.SourceVersion	- $(Build.SourceVersion)"
          echo "Build.TriggeredBy.BuildId	- $(Build.TriggeredBy.BuildId)"
          echo "Build.TriggeredBy.DefinitionId	- $(Build.TriggeredBy.DefinitionId)"
          echo "Build.TriggeredBy.BuildNumber	- $(Build.TriggeredBy.BuildNumber)"
          echo "System.JobId	- $(System.JobId)"
          echo "System.DefinitionId	- $(System.DefinitionId)"
          echo "TF_BUILD  - $(TF_BUILD)"
          # echo "Build.Repository.Name	- $(Build.Repository.Name)"
          # echo "Build.Repository.Provider	- $(Build.Repository.Provider)"

          echo "Agent.Id, Agent.Name - $(Agent.Id), $(Agent.Name)"
          # ${major}.${minor}.${build}.${timestamp}   