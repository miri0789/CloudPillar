name: ci_build

trigger:
# - none
- $(Build.SourceBranchName)
# - main

parameters:
  - name: env
    displayName: Select Environment to deploy
    type: string
    default: dev
    values:
    - tst
    - dev
    - stg
    - prd
  - name: image
    displayName: Select Image to Build and Scan
    type: string
    default: blobstreamer
    values:
    # - all
    - analyzer
    - beapi
    - blobstreamer
    - iotlistener
    - keyholder
    - mongowriter
    - twinlistener

variables:
- group: arm-vg
- group: iac-backend-vg
- group: aks-backend-vg
- group: backend-secrets-vg
# - group: images-vg


stages:
- stage: Update_Build_Tag_Scan_Push
  displayName: Update Version, Build, Tag and Push Images
  jobs:

  - job: Update_Version_Tag_Build_Image
    displayName: Updating Version Label, Building and Tagging Images
    pool:
      name: $(AGENT_POOL)
      agent.name: aks-${{parameters.env}}-agent 
      # agent.name: iac-${{parameters.env}}-agent 
    steps:
    - checkout: self
      persistCredentials: true
      clean: true
    - task: Bash@3
      displayName: Build & Tag Image
      inputs:
        targetType: inline
        script: |
          az login --service-principal -u $(iac-app-client-id) -p $(iac-app-client-secret) --tenant $(ARM_TENANT_ID)
          az account set --subscription $(ARM_SUBSCRIPTION_ID)
          echo "Azure Login Successfull"
          sudo az acr login -n $(ACR_NAME)
          echo "Updating ${{parameters.image}} Informational Version Label"
          TIMESTAMP=$(date +%Y%m%d%H%M%S) && BuildNumber=$(git rev-list --count HEAD) && sed -i "s/_BUILDNUM_/${BuildNumber}/g; s/_TIMESTAMP_/${TIMESTAMP}/g" src/backend/${{parameters.image}}/${{parameters.image}}.csproj
          sudo docker build -t $(ACR_NAME).azurecr.io/backend_${{parameters.image}}.dll --build-arg DLL=backend_${{parameters.image}}.dll -f ./src/backend/infra/build/Dockerfile ./src/backend/${{parameters.image}}
          
    - task: Bash@3
      displayName: Trviy Scan Image
      inputs:
        targetType: inline
        script: |
          # sudo docker run --rm -v /var/run/docker.sock:/var/run/docker.sock aquasec/trivy image --exit-code 1 --severity HIGH,CRITICAL $(ACR_NAME).azurecr.io/backend_${{parameters.image}}.dll:latest
          sudo docker run --rm -v /var/run/docker.sock:/var/run/docker.sock aquasec/trivy image  --severity HIGH,CRITICAL $(ACR_NAME).azurecr.io/backend_${{parameters.image}}.dll:latest

    - task: Bash@3
      displayName: Push Image to ACR
      inputs:
        targetType: inline
        script: |
          sudo docker push $(ACR_NAME).azurecr.io/backend_${{parameters.image}}.dll:latest
