# File: templates/clean.yml


  

steps:
- task: Bash@3
  # displayName: Build & Tag Image
  displayName: 'Clean Images'
  inputs:
    targetType: inline
    script: |
        docker stop $(docker ps -a -q) --force
        docker rm $(docker ps -a -q) --force    
        docker image prune -a --force
        # docker system prune --force

        echo "Containers: "
        docker ps -a
        echo -e "\n\n"
        echo "Images: "
        docker image ls





    #   docker build -t ${{ parameters.registryName }}.azurecr.io/${{parameters.imageName}}:${{parameters.imageVersion}} --build-arg DLL=${{parameters.imageName}}.dll --label "version=${{parameters.imageVersion}}" --label "name=${{parameters.imageName}}" -f ${{parameters.dockerFilePath}} ${{parameters.imagePath}}
      # sudo docker build -t ${{ parameters.registryName }}.azurecr.io/${{parameters.imageName}}:${{parameters.imageVersion}} --build-arg DLL=${{parameters.imageName}}.dll --label "version=${{parameters.imageVersion}}" --label "name=${{parameters.imageName}}" -f ${{parameters.dockerFilePath}} ${{parameters.imagePath}}
      # sudo docker build -t $(ACR_NAME).azurecr.io/backend_${{parameters.image}}.dll --build-arg DLL=backend_${{parameters.image}}.dll -f ./src/backend/infra/build/Dockerfile ./src/backend/${{parameters.image}}
