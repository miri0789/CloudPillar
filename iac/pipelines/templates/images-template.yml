parameters:
  registryName: ''
  pipelineAcrConnection: ''
  selectedImage: ''  
  imageVersion: ''
  images:
  - name: analyzer
    imageName: 'backend_analyzer'
    imagePath: './src/backend/analyzer/'
    dockerFilePath: './src/backend/infra/build/Dockerfile'
  - name: beapi
    imageName: 'backend_beapi'
    imagePath: './src/backend/beapi/'
    dockerFilePath: './src/backend/infra/build/Dockerfile'
  - name: infra
    imageName: 'backend_infra'
    imagePath: './src/backend/infra/'
    dockerFilePath: './src/backend/infra/build/Dockerfile'
  - name: mongowriter
    imageName: 'backend_mongowriter'
    imagePath: './src/backend/mongowriter/'
    dockerFilePath: './src/backend/infra/build/Dockerfile'
  - name: twinlistener
    imageName: 'backend_twinlistener'
    imagePath: './src/backend/twinlistener/'
    dockerFilePath: './src/backend/infra/build/Dockerfile'
  - name: unittests
    imageName: 'backend_unittests'
    imagePath: './src/backend/unittests/'
    dockerFilePath: './src/backend/infra/build/Dockerfile'
  - name: blobstreamer
    imageName: 'backend_blobstreamer'
    imagePath: './src/backend/Backend.BlobStreamer/'
    dockerFilePath: './src/backend/infra/build/Dockerfile'
  - name: iotlistener
    imageName: 'backend_iotlistener'
    imagePath: './src/backend/Backend.IoTListener/'
    dockerFilePath: './src/backend/infra/build/Dockerfile'
  - name: keyholder
    imageName: 'backend_keyholder'
    imagePath: './src/backend/Backend.KeyHolder/'
    dockerFilePath: './src/backend/infra/build/Dockerfile'
  - name: edge_conquest
    imageName: 'edge_conquest'
    imagePath: './src/edge/conquest/'
    imageVersion: 'v0.7.3'
    dockerFilePath: './src/edge/conquest/Dockerfile'
  
steps:
- ${{ each img in parameters.images }}:
  - ${{ if eq(parameters.selectedImage, img.name) }}:
    - script: |
        # IMAGE_NAME=${{ img.imageName }} && IMAGE_VERSION==${{ parameters.imageVersion }} && IMAGE_PATH=${{ img.imagePath }} && DOCKER_FILE=${{ img.dockerFilePath}} && BASE_PATH=${{ parameters.basePath}}
        echo "name=${{ img.name }}" > ./src/${{img.name}}_info.txt
        echo "imageName=${{ img.imageName }}" >> ./src/${{img.name}}_info.txt
        echo "imageVersion=${{ parameters.imageVersion }}" >> ./src/${{img.name}}_info.txt
        echo "imagePath=${{ img.imagePath }}" >> ./src/${{img.name}}_info.txt
        echo "dockerFilePath=${{ img.dockerFilePath }}" >> ./src/${{img.name}}_info.txt
      name: setImageInfo # Assign a name to this step
    - publish: $(System.DefaultWorkingDirectory)/./src/${{img.name}}_info.txt
      artifact: ${{img.name}}_info
      display: Publish ${{img.name}} Artifact
      
    # - script: |
    #     IMAGE_NAME=${{ img.imageName }} && IMAGE_VERSION==${{ parameters.imageVersion }} && IMAGE_PATH=${{ img.imagePath }} && DOCKER_FILE=${{ img.dockerFilePath}}
    #     echo "##vso[task.setvariable variable=NewImageName;isoutput=true]$IMAGE_NAME"
    #     echo "##vso[task.setvariable variable=NewImageVersion;isoutput=true]$IMAGE_VERSION"
    #     echo "##vso[task.setvariable variable=NewImagePath;isoutput=true]$IMAGE_PATH"
    #     echo "##vso[task.setvariable variable=NewDockerFilePath;isoutput=true]$DOCKER_FILE"
    #   displayName: 'Set Image Information Variables for ${{ img.name }}'
    #   name: setImageInfo # Assign a name to this step
    #   outputs:
    #     NewImageName: $(NewImageName)
    #       NewImageVersion: $(NewImageVersion)
    #       NewImagePath: $(NewImagePath)
    #       NewDockerFilePath: $(NewDockerFilePath)
