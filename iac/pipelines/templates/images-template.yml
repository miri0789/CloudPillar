parameters:
  registryName: ''
  pipelineAcrConnection: ''
  basePath: ''
  dockerFilePath: ''
  selectedImage: ''  
  imageVersion: ''
  images:
  - name: analyzer
    imageName: 'backend_analyzer'
    imagePath: ${{ parameters.basePath }}/analyzer
    imageVersion: ${{ parameters.imageVersion }}
    dockerFilePath: ${{ parameters.basePath }}/${{ parameters.dockerFilePath }}
  - name: beapi
    imageName: 'backend_beapi'
    imagePath: ${{ parameters.basePath }}/beapi
    imageVersion: ${{ parameters.imageVersion }}
    dockerFilePath: ${{ parameters.basePath }}/${{ parameters.dockerFilePath }}
  - name: infra
    imageName: 'backend_infra'
    imagePath: ${{ parameters.basePath }}/infra
    imageVersion: ${{ parameters.imageVersion }}
    dockerFilePath: ${{ parameters.basePath }}/${{ parameters.dockerFilePath }}
  - name: mongowriter
    imageName: 'backend_mongowriter'
    imagePath: ${{ parameters.basePath }}/mongowriter
    imageVersion: ${{ parameters.imageVersion }}
    dockerFilePath: ${{ parameters.basePath }}/${{ parameters.dockerFilePath }}
  - name: twinlistener
    imageName: 'backend_twinlistener'
    imagePath: ${{ parameters.basePath }}/twinlistener
    imageVersion: ${{ parameters.imageVersion }}
    dockerFilePath: ${{ parameters.basePath }}/${{ parameters.dockerFilePath }}
  - name: unittests
    imageName: 'backend_unittests'
    imagePath: ${{ parameters.basePath }}/unittests
    imageVersion: ${{ parameters.imageVersion }}
    dockerFilePath: ${{ parameters.basePath }}/${{ parameters.dockerFilePath }}
  - name: blobstreamer
    imageName: 'backend_blobstreamer'
    imagePath: ${{ parameters.basePath }}/Backend.BlobStreamer
    imageVersion: ${{ parameters.imageVersion }}
    dockerFilePath: ${{ parameters.basePath }}/${{ parameters.dockerFilePath }}
  - name: iotlistener
    imageName: 'backend_iotlistener'
    imagePath: ${{ parameters.basePath }}/Backend.IoTListener
    imageVersion: ${{ parameters.imageVersion }}
    dockerFilePath: ${{ parameters.basePath }}/${{ parameters.dockerFilePath }}
  - name: keyholder
    imageName: 'backend_keyholder'
    imagePath: ${{ parameters.basePath }}/Backend.KeyHolder

    dockerFilePath: ${{ parameters.basePath }}/${{ parameters.dockerFilePath }}
  - name: edge_conquest
    imageName: 'edge_conquest'
    # imagePath: './src/edge/conquest/'
    # imageVersion: 'v0.7.3'
    # dockerFilePath: './src/edge/conquest/Dockerfile'
  
steps:
- ${{ each img in parameters.images }}:
  - ${{ if eq(parameters.selectedImage, img.name) }}:
    - script: |
        echo "##vso[task.setvariable variable=imageName;]${{ img.imageName }}"
        echo "##vso[task.setvariable variable=imageVersion;]${{ img.imageVersion }}"
        echo "##vso[task.setvariable variable=imagePath;]${{ img.imagePath }}"
        echo "##vso[task.setvariable variable=dockerFilePath;]${{ img.dockerFilePath }}"
      displayName: 'Set Image Information Variables for ${{ img.name }}'
