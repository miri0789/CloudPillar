name: final_9320

trigger:
- $(Build.SourceBranchName)

# * Parameters
parameters:
  - name: env
    displayName: Select Environment to deploy
    type: string
    default: dev
    values:
    - tst
    - dev
    - stg
    - prd
  - name: image
    displayName: Select Image to Build and Scan
    type: string
    default: iotlistener
    values:
    # - all
    - analyzer
    - beapi
    - blobstreamer
    - iotlistener
    - keyholder
    - mongowriter
    - twinlistener  
  - name: versionString
    displayName: Select Major & Minor Verson
    type: string
    default: latest # 1.0
    values:
    - latest # 1.0
    - nextMinor # 1.1
    - nextMajor #2.0

# * Variables
variables:
# * Variables Groups
- group: arm-vg
- group: iac-backend-vg
- group: aks-backend-vg
- group: backend-secrets-vg

# * Variables.Variables

# * Dynamic Variables
- name: TIMESTAMP
  value: $(date +%Y%m%d%H%M%S)
- name: BuildNumber
  value: $(git rev-list --count HEAD)

stages:
- stage: CI_Build
  displayName: CI Build Process

  jobs:
  - job: SetCurrentVersion
    displayName: Set Current Version ID
    pool:
      name: $(AGENT_POOL)
      agent.name: aks-${{parameters.env}}-agent 
    steps:
    - checkout: self
      persistCredentials: true
      clean: true
    - bash: |
        buildNumber=$(BuildNumber) && timestamp=$(TIMESTAMP)
        # Major=$(grep -oP '^major=\K\d+' src/backend/version.txt) && Minor=$(grep -oP '^minor=\K\d+' src/backend/version.txt) 
        # Version=$Major.$Minor && FullVersion=$Version.$(BuildNumber).$(TIMESTAMP)
        
        Major=1 && Minor=0
        Version=$Major.$Minor && FullVersion=$Version.$(BuildNumber).$(TIMESTAMP)

        echo "##vso[task.setvariable variable=Major;isoutput=true]$Major"
        echo "##vso[task.setvariable variable=Minor;isoutput=true]$Minor"
        echo "##vso[task.setvariable variable=Version;isoutput=true]$Version"
        echo "##vso[task.setvariable variable=FullVersion;isoutput=true]$FullVersion"
        
        echo "##[section]Current Version Section"
        echo "##[group]Get Current Version Group"
        
        echo "Major: $Major"
        echo "Minor: $Minor"
        echo buildNumber: $buildNumber
        
        echo "Version: $Version"
        echo "FullVersion: $FullVersion"

        echo "##[endgroup]Get Current Version Finished"
      name: BashSetCurrentVersion

  - job: UpdateCurrentVersion
    displayName: Update Version ID
    pool:
      name: $(AGENT_POOL)
      agent.name: aks-${{parameters.env}}-agent     
    dependsOn: ['SetCurrentVersion']
    variables:              
      ${{ if eq(parameters.versionString, 'latest') }}:
        Major: $[ dependencies.SetCurrentVersion.outputs['BashSetCurrentVersion.Major'] ]
        Minor: $[ dependencies.SetCurrentVersion.outputs['BashSetCurrentVersion.Minor'] ]
        Version: $[ dependencies.SetCurrentVersion.outputs['BashSetCurrentVersion.Version'] ]
        FullVersion: $[ dependencies.SetCurrentVersion.outputs['BashSetCurrentVersion.FullVersion'] ]

      ${{ if eq(parameters.versionString, 'nextMinor') }}:
        Major: $[ dependencies.SetCurrentVersion.outputs['BashSetCurrentVersion.Major'] ]
        Minor: $['dependencies.SetCurrentVersion.outputs['BashSetCurrentVersion.Minor'] ]
        # Minor: $[ counter(['dependencies.SetCurrentVersion.outputs['BashSetCurrentVersion.Minor']'], 1) ]
        # Minor: $[ counter(variables['dependencies.SetCurrentVersion.outputs['BashSetCurrentVersion.Minor']'], 1) ]
        Version: $(Major).$(Minor)
        FullVersion: $(Major).$(Minor).$(BuildNumber).$(TIMESTAMP)
    
      ${{ if eq(parameters.versionString, 'nextMajor') }}:
        Major: $( $[ dependencies.SetCurrentVersion.outputs['BashSetCurrentVersion.Major'] ] + 1 )
        Minor: $[ dependencies.SetCurrentVersion.outputs['BashSetCurrentVersion.Minor'] ]
        Version: $(Major).$(Minor)
        FullVersion: $(Major).$(Minor).$(BuildNumber).$(TIMESTAMP)

    steps:
    - checkout: self
      persistCredentials: true
      clean: true
    - bash: |
        echo "Version String: ${{ parameters.versionString }}"
        echo "Version $(Version)"
        echo "Full Version $(FullVersion)"
        echo "Major $(Major)"
        echo "Minor $(Minor)"

        # echo "${{ parameters.versionString }}"
        # echo "##[group]Current Group"
        # echo "Current Major: $(Major)"
        # echo "Current Minor: $(Minor)"
        # echo "Current Version: $(Version)"
        # echo "Current Full Version: $(FullVersion)"
        # echo "##[endgroup]Current Group Finished"
      name: UpdateCurrentVersion





        